apiVersion: v1
kind: Pod
metadata:
  name: "secret-encryption"
  annotations:
    "helm.sh/hook": test
spec:
  hostNetwork: true
  serviceAccountName: {{ .Values.serviceAccount.name }}
  restartPolicy: Never
  volumes:
    - name: cert-volume
      hostPath:
        path: /tmp/certs
        type: Directory
  containers:
    - name: kubectl
      image: "docker.io/ruddickmg/kubectl-etcd:latest"
      imagePullPolicy: "IfNotPresent"
      volumeMounts:
        - mountPath: /etc/ssl/certs
          name: cert-volume
          readOnly: true
      env:
        - name: ETCDCTL_ENDPOINTS
          value: https://127.0.0.1:2379
        - name: ETCDCTL_CACERT
          value: /etc/ssl/certs/server.crt
        - name: ETCDCTL_CERT
          value: /etc/ssl/certs/client.crt
        - name: ETCDCTL_KEY
          value: /etc/ssl/certs/client.key
        - name: ETCD_DATA_DIR
          value: /var/lib/etcd
        - name: ETCDCTL_API
          value: "3"
      command:
        - /bin/sh
        - -c
        - >
          kubectl create secret generic encryption-test-secret --from-literal=hello=world;
          export SECRET="$(etcdctl get /registry/secrets/vault/encryption-test-secret | hexdump -C)";
          echo "secret: $SECRET";
          printf -- '%s' "$SECRET" | egrep -q -- "hello" && exit 0 || exit 1
{{/*          printf -- '%s' "$SECRET" | egrep -q -- "k8s:enc:kms:v2" && exit 0 || exit 1*/}}