apiVersion: v1
kind: Secret
metadata:
  name: encryption-test-secret
data:
  hello: dmFsdWUtMg0KDQo=
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: "secret-encryption-test-config-map"
data:
  ETCD_NAME: "etcd0"
  ETCD_INITIAL_CLUSTER: "etcd0=http://127.0.0.1:2380"
  ETCD_INITIAL_ADVERTISE_PEER_URLS: "http://127.0.0.1:2380"
  ETCD_ADVERTISE_CLIENT_URLS: "https://127.0.0.1:2379,https://127.0.0.1:4001"
  ETCD_LISTEN_CLIENT_URLS: "https://0.0.0.0:2379,https://0.0.0.0:4001"
  ETCD_LISTEN_PEER_URLS: "http://0.0.0.0:2380"
  ETCD_INITIAL_CLUSTER_TOKEN: "etcd-cluster-1"
  ETCD_INITIAL_CLUSTER_STATE: "new"
  ETCD_KEY_FILE: "/etc/ssl/certs/client.key"
  ETCD_CERT_FILE: "/etc/ssl/certs/client.crt"
  ETCD_TRUSTED_CA_FILE: "/etc/ssl/certs/server.crt"
  ETCD_PEER_AUTO_TLS: "true"
---
apiVersion: v1
kind: Pod
metadata:
  name: "secret-encryption"
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  restartPolicy: Never
  volumes:
    - name: cert-volume
      hostPath:
        path: /tmp/certs
        type: Directory
  containers:
    - name: kubectl
      image: "quay.io/coreos/etcd:v3.5.15"
      imagePullPolicy: "IfNotPresent"
      volumeMounts:
        - mountPath: /etc/ssl/certs
          name: cert-volume
          readOnly: true
      envFrom:
        - configMapRef:
            name: "secret-encryption-test-config-map"
      command:
        - /bin/sh
        - -c
        - >
          echo "starting";
          ls /etc/ssl/certs;
          export SECRET="$(etcdctl get /registry/secrets/default/encryption-test-secret | hexdump -C)";
          echo $SECRET;
          [[ "$SECRET" == *"hello"* ]] && exit 0 || exit 1;